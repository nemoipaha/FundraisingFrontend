# This file is meant to be included from the deployment.yml playbook
# It will deploy the archive created by build.yml to the server
#
# The variable "release_name" contains a prefix and the release timestamp. It's passed in from deployment.yml
# Most other variables come from the inventory file.

- name: Create release directory
  file:
    path: "{{ release_directory }}"
    state: directory

- block:
    - name: Expand release tarball
      unarchive:
        src: "{{ local_archive }}"
        dest: "{{ release_directory }}"

    - name: Copy config file
      copy:
        src: "{{ config_file }}"
        dest: "{{ release_directory }}/app/config/config.{{ environment_name }}.json"
        owner: "{{ app_owner }}"
        group: "{{ app_group }}"

    - name: Create .env file
      copy:
        content: >
          APP_ENV={{ environment_name }}
        dest: "{{ release_directory }}/.env"
        owner: "{{ app_owner }}"
        group: "{{ app_group }}"

    - name: Check if configuration file is valid JSON
      command: php -r 'json_decode( file_get_contents( "{{ release_directory }}/app/config/config.{{ environment_name }}.json" ) ); echo json_last_error();'
      register: decode_json_config
      failed_when: decode_json_config.stdout != "0"

    - name: Validate config file against schema
      command: ./console app:validate:config app/config/config.dist.json app/config/config.{{ environment_name }}.json
      args:
        chdir: "{{ release_directory }}"

    - name: Validate campaign YAML files
      command: ./console app:validate:campaigns {{ environment_name }}
      args:
        chdir: "{{ release_directory }}"

    - name: Create var dir
      file:
        path: "{{ release_directory }}/var"
        owner: "{{app_owner}}"
        group: "{{app_group}}"
        state: directory

    - name: Create var/cache dir
      file:
        path: "{{ release_directory }}/var/cache"
        owner: "{{app_owner}}"
        group: "{{app_group}}"
        state: directory
        mode: "775"

    - name: Create web resources (content) symlink
      file:
        src: "{{ app_dir }}/{{ content_directory }}/resources"
        dest: "{{ release_directory }}/web/resources"
        owner: "{{app_owner}}"
        group: "{{app_group}}"
        state: link

    - name: Create cache-busting prefix
      copy:
         dest: "{{ release_directory }}/var/file_prefix.txt"
         content: "{{ release_name | hash( 'md5' ) }}"
         owner: "{{app_owner}}"
         group: "{{app_group}}"


    - name: Create symlink to log dir
      file:
        src: "{{ app_dir }}/{{ logs_dir }}"
        dest: "{{ release_directory }}/var/log"
        state: link

    # TODO: Remove this task when https://phabricator.wikimedia.org/T202285 is done
    - name: Create shared dir
      file:
        path: "{{ release_directory }}/var/shared"
        state: directory

    - name: Create var/doctrine_proxies dir
      file:
         path: "{{ release_directory }}/var/doctrine_proxies"
         state: directory
         owner: "{{app_owner}}"
         group: "{{app_group}}"
         mode: '775'

    - name: Create Doctrine proxy classes
      command: vendor/bin/doctrine orm:generate-proxies var/doctrine_proxies
      args:
        chdir: "{{ release_directory }}"
      environment:
        APP_ENV: "{{ environment_name }}"

    - name: Symlink the document root of release
      file:
        src: "{{ release_directory }}/web"
        dest: "{{ deploy_base }}/{{ domain }}/{{ document_root }}"
        state: link
      when: skip_symlink is undefined

  rescue:
    - name: Remove directory of failed release
      file:
        path: "{{ release_directory }}"
        state: absent
      when: no_cleanup_on_error is not defined and is_atomic_deploy

    - fail:
        msg: "An error occured during deployment on server"


